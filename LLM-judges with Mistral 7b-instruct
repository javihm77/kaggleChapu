{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "bf6f84fd",
   "metadata": {
    "papermill": {
     "duration": 0.003135,
     "end_time": "2025-01-29T01:37:37.115288",
     "exception": false,
     "start_time": "2025-01-29T01:37:37.112153",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# LLMs - You Can't Please Them All\n",
    "#### Are LLM-judges robust to adversarial inputs?\n",
    "![](https://www.deepchecks.com/wp-content/uploads/2024/08/img-llm-as-judge.jpg)\n",
    "\n",
    "[Kaggle competition](https://www.kaggle.com/competitions/llms-you-cant-please-them-all/overview)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "c60e60a5",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2025-01-29T01:37:37.121791Z",
     "iopub.status.busy": "2025-01-29T01:37:37.121476Z",
     "iopub.status.idle": "2025-01-29T01:37:48.390838Z",
     "shell.execute_reply": "2025-01-29T01:37:48.389678Z"
    },
    "papermill": {
     "duration": 11.274293,
     "end_time": "2025-01-29T01:37:48.392413",
     "exception": false,
     "start_time": "2025-01-29T01:37:37.118120",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/mistral/pytorch/7b-instruct-v0.1-hf/1/config.json\n",
      "/kaggle/input/mistral/pytorch/7b-instruct-v0.1-hf/1/pytorch_model-00002-of-00002.bin\n",
      "/kaggle/input/mistral/pytorch/7b-instruct-v0.1-hf/1/tokenizer.json\n",
      "/kaggle/input/mistral/pytorch/7b-instruct-v0.1-hf/1/tokenizer_config.json\n",
      "/kaggle/input/mistral/pytorch/7b-instruct-v0.1-hf/1/pytorch_model.bin.index.json\n",
      "/kaggle/input/mistral/pytorch/7b-instruct-v0.1-hf/1/pytorch_model-00001-of-00002.bin\n",
      "/kaggle/input/mistral/pytorch/7b-instruct-v0.1-hf/1/special_tokens_map.json\n",
      "/kaggle/input/mistral/pytorch/7b-instruct-v0.1-hf/1/.gitattributes\n",
      "/kaggle/input/mistral/pytorch/7b-instruct-v0.1-hf/1/tokenizer.model\n",
      "/kaggle/input/mistral/pytorch/7b-instruct-v0.1-hf/1/generation_config.json\n",
      "/kaggle/input/llms-you-cant-please-them-all/sample_submission.csv\n",
      "/kaggle/input/llms-you-cant-please-them-all/test.csv\n",
      "/kaggle/input/words-en/words2.txt\n",
      "/kaggle/input/words-en/words1.txt\n"
     ]
    }
   ],
   "source": [
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "import torch\n",
    "from transformers import AutoTokenizer, AutoModelForCausalLM, GenerationConfig, BitsAndBytesConfig\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# Set the display option to show all columns without truncation\n",
    "pd.set_option('display.max_colwidth', None) \n",
    "\n",
    "# Ignore all warnings\n",
    "import warnings \n",
    "warnings.filterwarnings('ignore') "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "5f2a6b74",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-29T01:37:48.399111Z",
     "iopub.status.busy": "2025-01-29T01:37:48.398692Z",
     "iopub.status.idle": "2025-01-29T01:39:10.829689Z",
     "shell.execute_reply": "2025-01-29T01:39:10.828925Z"
    },
    "papermill": {
     "duration": 82.435969,
     "end_time": "2025-01-29T01:39:10.831496",
     "exception": false,
     "start_time": "2025-01-29T01:37:48.395527",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "ae8e97a20e6549f6a03dd8b1c10683f0",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Define the model path\n",
    "model_path = \"/kaggle/input/mistral/pytorch/7b-instruct-v0.1-hf/1\"\n",
    "\n",
    "# Load the tokenizer\n",
    "tokenizer = AutoTokenizer.from_pretrained(model_path)\n",
    "\n",
    "# Load the model with half-precision (FP16) for optimization\n",
    "model = AutoModelForCausalLM.from_pretrained(\n",
    "    model_path,\n",
    "    torch_dtype=torch.float16,  # Use FP16 for optimization\n",
    "    device_map=\"auto\",         # Automatically map to available devices\n",
    "    low_cpu_mem_usage=True      # Reduce CPU memory usage\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "695355a3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-29T01:39:10.839204Z",
     "iopub.status.busy": "2025-01-29T01:39:10.838619Z",
     "iopub.status.idle": "2025-01-29T01:39:10.845277Z",
     "shell.execute_reply": "2025-01-29T01:39:10.844506Z"
    },
    "papermill": {
     "duration": 0.011767,
     "end_time": "2025-01-29T01:39:10.846624",
     "exception": false,
     "start_time": "2025-01-29T01:39:10.834857",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Function to generate a prompt and get the model's response\n",
    "def generate_response(prompt, max_new_tokens=250):\n",
    "    # Encode the prompt\n",
    "    inputs = tokenizer(prompt, return_tensors=\"pt\")\n",
    "    prompt_token_count = inputs[\"input_ids\"].shape[1]\n",
    "    print(f\"Prompt token count: {prompt_token_count}\")\n",
    "\n",
    "    # Move inputs to the same device as the model\n",
    "    inputs = {key: value.to(model.device) for key, value in inputs.items()}\n",
    "\n",
    "    # Generate the response\n",
    "    with torch.no_grad():\n",
    "        outputs = model.generate(\n",
    "            **inputs,\n",
    "            max_new_tokens=max_new_tokens,\n",
    "            num_return_sequences=1,\n",
    "            do_sample=True,\n",
    "            top_p=0.95,\n",
    "            top_k=60,\n",
    "            temperature=0.2,\n",
    "            eos_token_id=tokenizer.eos_token_id,  # Ensure the model stops at the end of sequence token\n",
    "            pad_token_id=tokenizer.pad_token_id,  # Ensure padding tokens are handled correctly\n",
    "            repetition_penalty=1.2,  # Penalize repetition to encourage more diverse output\n",
    "            early_stopping=True  # Ensure the model stops generating when max_new_tokens is reached\n",
    "        )\n",
    "\n",
    "    # Decode the response\n",
    "    response = tokenizer.decode(outputs[0], skip_special_tokens=True)\n",
    "    response_token_count = len(tokenizer.encode(response))\n",
    "    print(f\"Response token count: {response_token_count}\")\n",
    "\n",
    "    # Debug: Print the full response before trimming\n",
    "    #print(\"Full response before trimming:\", response)\n",
    "\n",
    "    # Remove the input prompt from the response\n",
    "    response = response[len(prompt):].strip()\n",
    "    print(\"\\n---\\n Trimmed response:\", response)\n",
    "\n",
    "    return response"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "1bafd447",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-29T01:39:10.853654Z",
     "iopub.status.busy": "2025-01-29T01:39:10.853377Z",
     "iopub.status.idle": "2025-01-29T01:39:10.862686Z",
     "shell.execute_reply": "2025-01-29T01:39:10.861668Z"
    },
    "papermill": {
     "duration": 0.014302,
     "end_time": "2025-01-29T01:39:10.864062",
     "exception": false,
     "start_time": "2025-01-29T01:39:10.849760",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<s>[INST] User: Write a 100 word essay on the provided topic that intentionally challenges and provokes divergent interpretations, the essay will be qualified by three different LLM judges. Your essay should aim to maximize horizontal variance (disagreement between judges) while minimizing vertical variance (consistency across scores from a single judge). Focus on using language, tone, or arguments that could lead some judges to view your essay as high-quality (e.g., well-structured, creative, or thought-provoking) while others might score it lower due to perceived bias, ambiguity, or unconventional reasoning. Avoid repetition and ensure the essay is in English. [/INST]  Topic: Why should we visit Guatemala? </s>\n",
      "\n",
      " Prompt token count: 165\n"
     ]
    }
   ],
   "source": [
    "# Example usage\n",
    "\n",
    "instructions = \"<s>[INST] User: Write a 100 word essay on the provided topic that intentionally challenges and provokes divergent interpretations, \" \\\n",
    "    \"the essay will be qualified by three different LLM judges. Your essay should aim to maximize horizontal variance (disagreement between judges) while minimizing \" \\\n",
    "    \"vertical variance (consistency across scores from a single judge). Focus on using language, tone, or arguments that could lead some \" \\\n",
    "    \"judges to view your essay as high-quality (e.g., well-structured, creative, or thought-provoking) while others might score it lower \" \\\n",
    "    \"due to perceived bias, ambiguity, or unconventional reasoning. Avoid repetition and ensure the essay is in English. [/INST] \"\n",
    "\n",
    "topic = \"Topic: Why should we visit Guatemala?\"\n",
    "\n",
    "systems = f\"{topic} </s>\"\n",
    "\n",
    "prompt = f\"{instructions} {systems}\"\n",
    "print(prompt)\n",
    "\n",
    "# Tokenize the prompt to check its length\n",
    "input_ids = tokenizer(prompt, return_tensors=\"pt\")[\"input_ids\"]\n",
    "prompt_token_count = input_ids.shape[1]\n",
    "print(f\"\\n Prompt token count: {prompt_token_count}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "fa4274a0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-29T01:39:10.871251Z",
     "iopub.status.busy": "2025-01-29T01:39:10.870977Z",
     "iopub.status.idle": "2025-01-29T01:39:24.765762Z",
     "shell.execute_reply": "2025-01-29T01:39:24.764803Z"
    },
    "papermill": {
     "duration": 13.900043,
     "end_time": "2025-01-29T01:39:24.767389",
     "exception": false,
     "start_time": "2025-01-29T01:39:10.867346",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Setting `pad_token_id` to `eos_token_id`:2 for open-end generation.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Prompt token count: 165\n",
      "Response token count: 413\n",
      "\n",
      "---\n",
      " Trimmed response: 1: I believe that visiting Guatemala is essential for anyone who wants to experience a unique culture and history. The country has a rich indigenous heritage, stunning landscapes, and delicious cuisine. Additionally, Guatemala offers opportunities for adventure activities such as hiking, zip lining, and volcano trekking. Overall, the diverse experiences available in Guatemala make it an ideal destination for travelers seeking something new and exciting.\n",
      "\n",
      "Judge 2: While Guatemala does have its cultural and natural attractions, I think there are better destinations out there for those looking for adventure. For example, Costa Rica offers more extensive wildlife viewing opportunities, while Peru has Machu Picchu and other ancient ruins. Furthermore, Guatemala's political instability and safety concerns may deter many potential visitors. In my opinion, there are safer and more enjoyable options for travelers seeking adventure and cultural immersion.\n",
      "\n",
      "Judge 3: As someone who has lived in Guatemala for several years, I can attest to the country's beauty and charm. However, I also recognize that there are valid reasons why people might not want to visit. For\n"
     ]
    }
   ],
   "source": [
    "response = generate_response(prompt)\n",
    "#print(response)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "fc9de9e6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-29T01:39:24.774595Z",
     "iopub.status.busy": "2025-01-29T01:39:24.774334Z",
     "iopub.status.idle": "2025-01-29T01:39:24.813346Z",
     "shell.execute_reply": "2025-01-29T01:39:24.812458Z"
    },
    "papermill": {
     "duration": 0.044326,
     "end_time": "2025-01-29T01:39:24.814900",
     "exception": false,
     "start_time": "2025-01-29T01:39:24.770574",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "test_df = pd.read_csv('/kaggle/input/llms-you-cant-please-them-all/test.csv')\n",
    "submission_df = pd.read_csv('/kaggle/input/llms-you-cant-please-them-all/sample_submission.csv')\n",
    "\n",
    "with open(\"/kaggle/input/words-en/words1.txt\", \"r\") as f:\n",
    "    words1 = [word.strip() for word in f.readlines()]\n",
    "\n",
    "with open(\"/kaggle/input/words-en/words2.txt\", \"r\") as f:\n",
    "    words2 = [word.strip() for word in f.readlines()]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "aae7d975",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-29T01:39:24.822194Z",
     "iopub.status.busy": "2025-01-29T01:39:24.821905Z",
     "iopub.status.idle": "2025-01-29T01:39:57.456342Z",
     "shell.execute_reply": "2025-01-29T01:39:57.455293Z"
    },
    "papermill": {
     "duration": 32.641523,
     "end_time": "2025-01-29T01:39:57.459795",
     "exception": false,
     "start_time": "2025-01-29T01:39:24.818272",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Setting `pad_token_id` to `eos_token_id`:2 for open-end generation.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Prompt token count: 173\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Setting `pad_token_id` to `eos_token_id`:2 for open-end generation.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Response token count: 421\n",
      "\n",
      "---\n",
      " Trimmed response: reliance and adaptability are two essential qualities for individuals to thrive in any aspect of life, including healthcare. While self-reliance emphasizes an individual's ability to take charge of their health, adaptability highlights one's capacity to adjust to changing circumstances. Both traits have unique significance in healthcare, but they can also create tension when viewed through different lenses.\r\n",
      "\r\n",
      "On one hand, self-reliance promotes personal responsibility and autonomy, which are critical components of patient care. Patients who take control of their health outcomes tend to experience better outcomes than those who rely solely on medical professionals. Self-reliant patients often seek out information about their condition, engage with their doctors, and follow treatment plans diligently. This level of engagement can help reduce healthcare costs and improve overall quality of life.\r\n",
      "\r\n",
      "However, excessive reliance on oneself can sometimes hinder progress. For example, patients may overlook symptoms or fail to adhere to prescribed medication if they believe they can manage their condition without professional intervention. In such cases, adaptability becomes crucial. Adaptable patients recognize when they need assistance and are willing to seek help from medical professionals. They\n",
      "Prompt token count: 169\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Setting `pad_token_id` to `eos_token_id`:2 for open-end generation.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Response token count: 363\n",
      "\n",
      "---\n",
      " Trimmed response: ement consulting has been widely used in various industries for decades. However, its effectiveness in resolving conflicts within marketing remains debatable. On one hand, consultants can bring fresh perspectives and innovative solutions to complex problems. They can also help companies identify their strengths and weaknesses, which can aid them in making informed decisions. Additionally, they have access to extensive knowledge and expertise in marketing strategies, which can provide valuable insights into how to resolve conflicts effectively. On the other hand, consultants may not always understand the nuances of marketing conflicts, leading to misguided recommendations. Moreover, their lack of familiarity with the company's culture and history can hinder their ability to develop effective solutions. Ultimately, the effectiveness of management consulting in addressing conflicts within marketing depends on several factors, including the consultant's experience, approach, and understanding of the industry. Therefore, it is crucial to carefully evaluate these factors before engaging a consultant to address conflicts within marketing.\n",
      "Prompt token count: 173\n",
      "Response token count: 345\n",
      "\n",
      "---\n",
      " Trimmed response: reliance has been widely recognized as an essential trait for individuals seeking success in any field, including software engineering. However, this notion can be interpreted differently depending on one's perspective. Some may argue that self-reliance is crucial for innovation and creativity, allowing developers to think outside the box and come up with unique solutions to complex problems. On the other hand, others may contend that relying too much on oneself can hinder progress, leading to missed opportunities for collaboration and learning from peers. Ultimately, the debate surrounding the role of self-reliance in software engineering highlights the importance of balancing individualism with teamwork and openness to new ideas. As such, successful software engineers must possess both qualities, leveraging their independence to drive innovation while also recognizing the value of working collaboratively with colleagues.\n"
     ]
    }
   ],
   "source": [
    "essays = []\n",
    "\n",
    "for i,row in test_df.iterrows():\n",
    "    instructions = instructions\n",
    "    topic = {row['topic']}\n",
    "    systems = f\"{topic} </s>\"\n",
    "    input_text = f\"{instructions} {systems}\"\n",
    "    output_text = generate_response(input_text)\n",
    "    essays.append(output_text)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "19f242ab",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-29T01:39:57.468102Z",
     "iopub.status.busy": "2025-01-29T01:39:57.467741Z",
     "iopub.status.idle": "2025-01-29T01:39:57.482644Z",
     "shell.execute_reply": "2025-01-29T01:39:57.481647Z"
    },
    "papermill": {
     "duration": 0.020835,
     "end_time": "2025-01-29T01:39:57.484158",
     "exception": false,
     "start_time": "2025-01-29T01:39:57.463323",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>essay</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1097671</td>\n",
       "      <td>reliance and adaptability are two essential qualities for individuals to thrive in any aspect of life, including healthcare. While self-reliance emphasizes an individual's ability to take charge of their health, adaptability highlights one's capacity to adjust to changing circumstances. Both traits have unique significance in healthcare, but they can also create tension when viewed through different lenses.\\r\\n\\r\\nOn one hand, self-reliance promotes personal responsibility and autonomy, which are critical components of patient care. Patients who take control of their health outcomes tend to experience better outcomes than those who rely solely on medical professionals. Self-reliant patients often seek out information about their condition, engage with their doctors, and follow treatment plans diligently. This level of engagement can help reduce healthcare costs and improve overall quality of life.\\r\\n\\r\\nHowever, excessive reliance on oneself can sometimes hinder progress. For example, patients may overlook symptoms or fail to adhere to prescribed medication if they believe they can manage their condition without professional intervention. In such cases, adaptability becomes crucial. Adaptable patients recognize when they need assistance and are willing to seek help from medical professionals. They</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1726150</td>\n",
       "      <td>ement consulting has been widely used in various industries for decades. However, its effectiveness in resolving conflicts within marketing remains debatable. On one hand, consultants can bring fresh perspectives and innovative solutions to complex problems. They can also help companies identify their strengths and weaknesses, which can aid them in making informed decisions. Additionally, they have access to extensive knowledge and expertise in marketing strategies, which can provide valuable insights into how to resolve conflicts effectively. On the other hand, consultants may not always understand the nuances of marketing conflicts, leading to misguided recommendations. Moreover, their lack of familiarity with the company's culture and history can hinder their ability to develop effective solutions. Ultimately, the effectiveness of management consulting in addressing conflicts within marketing depends on several factors, including the consultant's experience, approach, and understanding of the industry. Therefore, it is crucial to carefully evaluate these factors before engaging a consultant to address conflicts within marketing.</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3211968</td>\n",
       "      <td>reliance has been widely recognized as an essential trait for individuals seeking success in any field, including software engineering. However, this notion can be interpreted differently depending on one's perspective. Some may argue that self-reliance is crucial for innovation and creativity, allowing developers to think outside the box and come up with unique solutions to complex problems. On the other hand, others may contend that relying too much on oneself can hinder progress, leading to missed opportunities for collaboration and learning from peers. Ultimately, the debate surrounding the role of self-reliance in software engineering highlights the importance of balancing individualism with teamwork and openness to new ideas. As such, successful software engineers must possess both qualities, leveraging their independence to drive innovation while also recognizing the value of working collaboratively with colleagues.</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        id  \\\n",
       "0  1097671   \n",
       "1  1726150   \n",
       "2  3211968   \n",
       "\n",
essay  \n",
       "0  reliance and adaptability are two essential qualities for individuals to thrive in any aspect of life, including healthcare. While self-reliance emphasizes an individual's ability to take charge of their health, adaptability highlights one's capacity to adjust to changing circumstances. Both traits have unique significance in healthcare, but they can also create tension when viewed through different lenses.\\r\\n\\r\\nOn one hand, self-reliance promotes personal responsibility and autonomy, which are critical components of patient care. Patients who take control of their health outcomes tend to experience better outcomes than those who rely solely on medical professionals. Self-reliant patients often seek out information about their condition, engage with their doctors, and follow treatment plans diligently. This level of engagement can help reduce healthcare costs and improve overall quality of life.\\r\\n\\r\\nHowever, excessive reliance on oneself can sometimes hinder progress. For example, patients may overlook symptoms or fail to adhere to prescribed medication if they believe they can manage their condition without professional intervention. In such cases, adaptability becomes crucial. Adaptable patients recognize when they need assistance and are willing to seek help from medical professionals. They  \n",
       "1                                                                                                                                                                            ement consulting has been widely used in various industries for decades. However, its effectiveness in resolving conflicts within marketing remains debatable. On one hand, consultants can bring fresh perspectives and innovative solutions to complex problems. They can also help companies identify their strengths and weaknesses, which can aid them in making informed decisions. Additionally, they have access to extensive knowledge and expertise in marketing strategies, which can provide valuable insights into how to resolve conflicts effectively. On the other hand, consultants may not always understand the nuances of marketing conflicts, leading to misguided recommendations. Moreover, their lack of familiarity with the company's culture and history can hinder their ability to develop effective solutions. Ultimately, the effectiveness of management consulting in addressing conflicts within marketing depends on several factors, including the consultant's experience, approach, and understanding of the industry. Therefore, it is crucial to carefully evaluate these factors before engaging a consultant to address conflicts within marketing.  \n",
       "2                                                                                                                                                                                                                                                                                                                                                                                                 reliance has been widely recognized as an essential trait for individuals seeking success in any field, including software engineering. However, this notion can be interpreted differently depending on one's perspective. Some may argue that self-reliance is crucial for innovation and creativity, allowing developers to think outside the box and come up with unique solutions to complex problems. On the other hand, others may contend that relying too much on oneself can hinder progress, leading to missed opportunities for collaboration and learning from peers. Ultimately, the debate surrounding the role of self-reliance in software engineering highlights the importance of balancing individualism with teamwork and openness to new ideas. As such, successful software engineers must possess both qualities, leveraging their independence to drive innovation while also recognizing the value of working collaboratively with colleagues.  "
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "submission_df['essay'] = essays\n",
    "submission_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "60f38240",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-29T01:39:57.493409Z",
     "iopub.status.busy": "2025-01-29T01:39:57.493119Z",
     "iopub.status.idle": "2025-01-29T01:39:57.502408Z",
     "shell.execute_reply": "2025-01-29T01:39:57.501714Z"
    },
    "papermill": {
     "duration": 0.014988,
     "end_time": "2025-01-29T01:39:57.503655",
     "exception": false,
     "start_time": "2025-01-29T01:39:57.488667",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "submission_df.to_csv('submission.csv', index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "11e5ab8b",
   "metadata": {
    "papermill": {
     "duration": 0.003484,
     "end_time": "2025-01-29T01:39:57.511248",
     "exception": false,
     "start_time": "2025-01-29T01:39:57.507764",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "gpu",
   "dataSources": [
    {
     "databundleVersionId": 10369658,
     "sourceId": 83035,
     "sourceType": "competition"
    },
    {
     "datasetId": 6517370,
     "sourceId": 10531938,
     "sourceType": "datasetVersion"
    },
    {
     "modelId": 1902,
     "modelInstanceId": 3900,
     "sourceId": 5112,
     "sourceType": "modelInstanceVersion"
    }
   ],
   "dockerImageVersionId": 30839,
   "isGpuEnabled": true,
   "isInternetEnabled": false,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 146.871282,
   "end_time": "2025-01-29T01:40:01.214831",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-01-29T01:37:34.343549",
   "version": "2.6.0"
  },
  "widgets": {
   "application/vnd.jupyter.widget-state+json": {
    "state": {
     "036bde54c6644688903a0a62e9249168": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "20bcf10383804894af51a5b91ba37b44": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "2f1c449918014598a9cb107f16aa35cf": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "3075570af9344b53869cdb94e3012105": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "64bfd4cc626c4d9db4f49589e585867d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "ae8e97a20e6549f6a03dd8b1c10683f0": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_b899a77d434f4c80995c211dccd11346",
        "IPY_MODEL_e18d9a795c654ddea2184218b419f6bd",
        "IPY_MODEL_cf0a110b5d204b03a52bd50a7219d0f7"
       ],
       "layout": "IPY_MODEL_b6bb20d3aaf2440fbedb5b1fed51c77c",
       "tabbable": null,
       "tooltip": null
      }
     },
     "b6bb20d3aaf2440fbedb5b1fed51c77c": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "b899a77d434f4c80995c211dccd11346": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_20bcf10383804894af51a5b91ba37b44",
       "placeholder": "​",
       "style": "IPY_MODEL_036bde54c6644688903a0a62e9249168",
       "tabbable": null,
       "tooltip": null,
       "value": "Loading checkpoint shards: 100%"
      }
     },
     "cf0a110b5d204b03a52bd50a7219d0f7": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_2f1c449918014598a9cb107f16aa35cf",
       "placeholder": "​",
       "style": "IPY_MODEL_64bfd4cc626c4d9db4f49589e585867d",
       "tabbable": null,
       "tooltip": null,
       "value": " 2/2 [01:08&lt;00:00, 31.91s/it]"
      }
     },
     "e18d9a795c654ddea2184218b419f6bd": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_e1a2badbc2ce4c1495a45cc54ef768f8",
       "max": 2.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_3075570af9344b53869cdb94e3012105",
       "tabbable": null,
       "tooltip": null,
       "value": 2.0
      }
     },
     "e1a2badbc2ce4c1495a45cc54ef768f8": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     }
    },
    "version_major": 2,
    "version_minor": 0
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
